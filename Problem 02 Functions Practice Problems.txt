Name: Arafat Honpode

Problem 02 Functions Practice Problems:-

1. Help user find degF or degC based on their Conversion Selection. Use Case statement and ensure
   that the inputs are within the freezing point (0 C/32 F) and the boiling point of water 
   (100 C/212 F)
	a. degF = (degC*9/5)+32
	b. degC = (degF-32)*5/9
Ans)
CODE:
#!/bin/bash -x

echo "Enter the temperature to be converted:"
read temp
echo "Choose any Option from Below:"
echo "1. DegC To DegF."
echo "2. DegF To DegC."

echo "Enter the Option:"
read input

function cal()
{
DegCToDegF=1
DegFToDegC=2

case $input in
         $DegCToDegF)
            if [[ $temp -ge 32 && $temp -le 212 ]]
            then
               outputone=$((($temp * 9/5) + 32))
               echo "DegC To DegF is:" $outputone
            else
               echo "Invalid Number!"
            fi
               ;;
	 $DegFToDegC)
            if [[ $temp -ge 32 && $temp -le 212 ]]
            then
               outputtwo=$((($temp - 32) * 5/9))
               echo "DegF To DegC is:" $outputtwo
            else
               echo "Invalid Range!"
            fi
               ;;
         *)
            output=InvalidRangeNumber
            echo $output
               ;;
esac
}
result=$( cal $tmp $input )
echo $result


OUTPUT:
arafat@kali:~/Desktop/Arafat/TerminalCommands/linux-content/Day6/PracticeProblems/functions$ ./functionsone.sh 
+ echo 'Enter the temperature to be converted:'
Enter the temperature to be converted:
+ read temp
38
+ echo 'Choose any Option from Below:'
Choose any Option from Below:
+ echo '1. DegC To DegF.'
1. DegC To DegF.
+ echo '2. DegF To DegC.'
2. DegF To DegC.
+ echo 'Enter the Option:'
Enter the Option:
+ read input
1
++ cal 1
++ DegCToDegF=1
++ DegFToDegC=2
++ case $input in
++ [[ 38 -ge 32 ]]
++ [[ 38 -le 212 ]]
++ outputone=100
++ echo 'DegC To DegF is:' 100
+ result='DegC To DegF is: 100'
+ echo DegC To DegF is: 100
DegC To DegF is: 100
arafat@kali:~/Desktop/Arafat/TerminalCommands/linux-content/Day6/PracticeProblems/functions$ ./functionsone.sh 
+ echo 'Enter the temperature to be converted:'
Enter the temperature to be converted:
+ read temp
180
+ echo 'Choose any Option from Below:'
Choose any Option from Below:
+ echo '1. DegC To DegF.'
1. DegC To DegF.
+ echo '2. DegF To DegC.'
2. DegF To DegC.
+ echo 'Enter the Option:'
Enter the Option:
+ read input
2
++ cal 2
++ DegCToDegF=1
++ DegFToDegC=2
++ case $input in
++ [[ 180 -ge 32 ]]
++ [[ 180 -le 212 ]]
++ outputtwo=82
++ echo 'DegF To DegC is:' 82
+ result='DegF To DegC is: 82'
+ echo DegF To DegC is: 82
DegF To DegC is: 82


2. Write a function to check if the two numbers are Palindromes.
Ans)
CODE:
#!/bin/bash -x

echo "Enter Two numbers:"

read -a number

function con()
{
m=${number[0]}
rev=0

for i in "${number[@]}"
do
   while [ $i -gt 0 ]
   do
            r=`expr $i % 10`
            rev=`expr $rev \* 10 + $r`
            i=`expr $i / 10`
   done

   if [[ $m == $rev ]]
   then
            echo " $m is Palindrome"
   else
            echo " $m is not Palindrome"
   fi
done
}

result="$( con $m )"
echo $result


OUTPUT:

arafat@kali:~/Desktop/Arafat/TerminalCommands/linux-content/Day6/PracticeProblems/functions$ ./functionstwo.sh 
+ echo 'Enter Two numbers:'
Enter Two numbers:
+ read -a number
123 123
++ con
++ m=123
++ rev=0
++ for i in "${number[@]}"
++ '[' 123 -gt 0 ']'
+++ expr 123 % 10
++ r=3
+++ expr 0 '*' 10 + 3
++ rev=3
+++ expr 123 / 10
++ i=12
++ '[' 12 -gt 0 ']'
+++ expr 12 % 10
++ r=2
+++ expr 3 '*' 10 + 2
++ rev=32
+++ expr 12 / 10
++ i=1
++ '[' 1 -gt 0 ']'
+++ expr 1 % 10
++ r=1
+++ expr 32 '*' 10 + 1
++ rev=321
+++ expr 1 / 10
++ i=0
++ '[' 0 -gt 0 ']'
++ [[ 123 == 321 ]]
++ echo ' 123 is not Palindrome'
++ for i in "${number[@]}"
++ '[' 123 -gt 0 ']'
+++ expr 123 % 10
++ r=3
+++ expr 321 '*' 10 + 3
++ rev=3213
+++ expr 123 / 10
++ i=12
++ '[' 12 -gt 0 ']'
+++ expr 12 % 10
++ r=2
+++ expr 3213 '*' 10 + 2
++ rev=32132
+++ expr 12 / 10
++ i=1
++ '[' 1 -gt 0 ']'
+++ expr 1 % 10
++ r=1
+++ expr 32132 '*' 10 + 1
++ rev=321321
+++ expr 1 / 10
++ i=0
++ '[' 0 -gt 0 ']'
++ [[ 123 == 321321 ]]
++ echo ' 123 is not Palindrome'
+ result=' 123 is not Palindrome
 123 is not Palindrome'
+ echo 123 is not Palindrome 123 is not Palindrome
123 is not Palindrome 123 is not Palindrome


