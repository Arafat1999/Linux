Name: Arafat Honpode

Problem 02 While Loop Practice Problems:-

Repetition Practice Problems With While Loop:

1. Write a program that takes a command line argument n and prints a table 
   of the powers of 2 that are less than or equal to 2^n till 256 is reaches.
Ans)
CODE:
#!/bin/bash

echo "Enter Number"
read num

echo -e "No"  \  "2 To the Power n(2^$num)"

p=1

i=1

while [ $i != 257 ]
do
   if [ i == 0 ]
   then
      p=1
   else
      p=$((p*$num))
      echo -e $i  \  $p
   fi

   ((i++))
done


OUTPUT:

arafat@kali:~/Desktop/Arafat/TerminalCommands/linux-content/Day6/PracticeProblems/whileloop$ ./whileloopone.sh 
Enter Number
3
No   2 To the Power n(2^3)
1   3
2   9
3   27
4   81
5   243
6   729
7   2187
8   6561
9   19683
10   59049
11   177147
12   531441
13   1594323
14   4782969
15   14348907
16   43046721
17   129140163
18   387420489
19   1162261467
20   3486784401
21   10460353203
22   31381059609
23   94143178827
24   282429536481
25   847288609443
26   2541865828329
27   7625597484987
28   22876792454961
29   68630377364883
30   205891132094649
31   617673396283947
32   1853020188851841
33   5559060566555523
34   16677181699666569
35   50031545098999707
36   150094635296999121
37   450283905890997363
38   1350851717672992089
39   4052555153018976267
40   -6289078614652622815
41   -420491770248316829
42   -1261475310744950487
43   -3784425932234851461
44   7093466277004997233
45   2833654757305440083
46   8500964271916320249
47   7056148742039409131
48   2721702152408675777
49   8165106457226027331
50   6048575297968530377
51   -301018179803960485
52   -903054539411881455
53   -2709163618235644365
54   -8127490854706933095
55   -5935728490411247669
56   639558602475808609
57   1918675807427425827
58   5756027422282277481
59   -1178661806862719173
60   -3535985420588157519
61   7838787811945079059
62   5069619362125685561
63   -3237885987332494933
64   8733086111712066817
65   7752514261426648835
66   4810798710570394889
67   -4014347941998366949
68   6403700247714450769
69   764356669433800691
70   2293070008301402073
71   6879210024904206219
72   2190886001003067041
73   6572658003009201123
74   1271229935318051753
75   3813689805954155259
76   -7005674655847085839
77   -2570279893831705901
78   -7710839681495117703
79   -4685774970775801493
80   4389419161382147137
81   -5278486589563110205
82   2611284305020221001
83   7833852915060663003
84   5054814671472437393
85   -3282300059292239437
86   8599843895832833305
87   7352787613788948299
88   3611618767657293281
89   -7611887770737671773
90   -4388919238503463703
91   5279986358199160507
92   -2606784999112070095
93   -7820354997336210285
94   -5014320918299079239
95   3403781318812313899
96   -8235400117272609919
97   -6259456278108278141
98   -331624760615282807
99   -994874281845848421
100   -2984622845537545263
101   -8953868536612635789
102   -8414861536128355751
103   -6797840534675515637
104   -1946777530316995295
105   -5840332590950985885
106   925746300856593961
107   2777238902569781883
108   8331716707709345649
109   6548406049418485331
110   1198474074545904377
111   3595422223637713131
112   -7660477402796412223
113   -4534688134679685053
114   4842679669670496457
115   -3918705064698062245
116   6690628879615364881
117   1625142565136543027
118   4875427695409629081
119   -3820460987480664373
120   6985361111267558497
121   2509339260093123875
122   7528017780279371625
123   4137309267128563259
124   -6034816272323861839
125   342295256737966099
126   1026885770213898297
127   3080657310641694891
128   -9204772141784466943
129   -9167572351643849213
130   -9055972981221996023
131   -8721174869956436453
132   -7716780536159757743
133   -4703597534769721613
134   4335951469400386777
135   -5438889665508391285
136   2130075077184377761
137   6390225231553133283
138   723931620949848233
139   2171794862849544699
140   6515384588548634097
141   1099409691936350675
142   3298229075809052025
143   -8552056846282395541
144   -7209426465137635007
145   -3181535321703353405
146   8902138108599491401
147   8259670252088922587
148   6332266682557216145
149   550055973962096819
150   1650167921886290457
151   4950503765658871371
152   -3595232776732937503
153   7661045743510739107
154   4536393156822665705
155   -4837564603241554501
156   3934050263984888113
157   -6644593281754887277
158   -1487035771555110215
159   -4461107314665330645
160   5063422129713559681
161   -3256477684568872573
162   8677311020002933897
163   7585188986299250075
164   4308822885188198609
165   -5520275418144955789
166   1885917819274684249
167   5657753457824052747
168   -1473483700237393375
169   -4420451100712180125
170   5185390771573011241
171   -2890571758990517893
172   -8671715276971553679
173   -7568401757205109421
174   -4258461197905776647
175   5671360479992221675
176   -1432662633732886591
177   -4297987901198659773
178   5552780370113572297
179   -1788402963368834725
180   -5365208890106504175
181   2351117403390039091
182   7053352210170117273
183   2713312556800800203
184   8139937670402400609
185   5973068937497650211
186   -527537261216600983
187   -1582611783649802949
188   -4747835350949408847
189   4203238020861325075
190   -5837030011125576391
191   935654040332822443
192   2806962120998467329
193   8420886362995401987
194   6815915015276654345
195   2001000972120411419
196   6003002916361234257
197   -437735324625848845
198   -1313205973877546535
199   -3939617921632639605
200   6627890308811632801
201   1436926852725346787
202   4310780558176040361
203   -5514402399181430533
204   1903536876165260017
205   5710610628495780051
206   -1314912188222211463
207   -3944736564666634389
208   6612534379709648449
209   1390859065419393731
210   4172577196258181193
211   -5929012484935008037
212   659706618904527505
213   1979119856713582515
214   5937359570140747545
215   -634665363287308981
216   -1903996089861926943
217   -5711988269585780829
218   1310779264952209129
219   3932337794856627387
220   -6649730689139669455
221   -1502447993709456749
222   -4507343981128370247
223   4924712130324440875
224   -3672607682736228991
225   7428921025500864643
226   3840019002793042313
227   -6926687065330424677
228   -2333317122281722415
229   -6999951366845167245
230   -2553110026825950119
231   -7659330080477850357
232   -4531246167723999455
233   4853005570537553251
234   -3887727362096891863
235   6783561987418876027
236   1903941888547076465
237   5711825665641229395
238   -1311267076785863431
239   -3933801230357590293
240   6645340382636780737
241   1489277074200790595
242   4467831222602371785
243   -5043250405902436261
244   3316992856002242833
245   -8495765505702823117
246   -7040552443398917735
247   -2674913256487201589
248   -8024739769461604767
249   -5627475234675262685
250   1564318369683763561
251   4692955109051290683
252   -4367878746555679567
253   5343107834042512915
254   -2417420571582012871
255   -7252261714746038613
256   -3310041070528564223


3. Extend the Flip Coin problem till either Heads or Tails wins 11 times.
Ans)
CODE:
#!/bin/bash -x

Head=1

randomCheck=$(( RANDOM % (2 - 1 + 1 ) + 1 ))

while [ $Head != 12 ]
do
   if [ $Head -eq $randomCheck ]
   then
      echo "Heads"
   else
      echo "Tails"
   fi
   ((Head++))
done

OUTPUT:

arafat@kali:~/Desktop/Arafat/TerminalCommands/linux-content/Day6/PracticeProblems/whileloop$ ./whileloopthree.sh 
+ Head=1
+ randomCheck=1
+ '[' 1 '!=' 12 ']'
+ '[' 1 -eq 1 ']'
+ echo Heads
Heads
+ (( Head++ ))
+ '[' 2 '!=' 12 ']'
+ '[' 2 -eq 1 ']'
+ echo Tails
Tails
+ (( Head++ ))
+ '[' 3 '!=' 12 ']'
+ '[' 3 -eq 1 ']'
+ echo Tails
Tails
+ (( Head++ ))
+ '[' 4 '!=' 12 ']'
+ '[' 4 -eq 1 ']'
+ echo Tails
Tails
+ (( Head++ ))
+ '[' 5 '!=' 12 ']'
+ '[' 5 -eq 1 ']'
+ echo Tails
Tails
+ (( Head++ ))
+ '[' 6 '!=' 12 ']'
+ '[' 6 -eq 1 ']'
+ echo Tails
Tails
+ (( Head++ ))
+ '[' 7 '!=' 12 ']'
+ '[' 7 -eq 1 ']'
+ echo Tails
Tails
+ (( Head++ ))
+ '[' 8 '!=' 12 ']'
+ '[' 8 -eq 1 ']'
+ echo Tails
Tails
+ (( Head++ ))
+ '[' 9 '!=' 12 ']'
+ '[' 9 -eq 1 ']'
+ echo Tails
Tails
+ (( Head++ ))
+ '[' 10 '!=' 12 ']'
+ '[' 10 -eq 1 ']'
+ echo Tails
Tails
+ (( Head++ ))
+ '[' 11 '!=' 12 ']'
+ '[' 11 -eq 1 ']'
+ echo Tails
Tails
+ (( Head++ ))
+ '[' 12 '!=' 12 ']'


4. Write a program where a gambler starts with Rs 100 and places Rs 1 bet until he/she goes
   broke i.e. no more money to gamble or reaches the goal of Rs 200. Keeps track of number
   of times won and number of bets made.
Ans)
CODE:
#!/bin/bash -x

money=100
bets=0
wins=0

while (( $money > 0 && $money < 200 ))
do
   ((bets++))
   random=$(( RANDOM % 2 ))
   if (( $random == 1 ))
   then
      ((wins++))
      money=$(( money+1 ))
   else

      money=$(( money-1 ))
   fi
done
echo "Amout of Money Left:" $money
echo "Number of Bets Made:" $bets
echo "Number of Times Wom:" $wins


OUTPUT:

arafat@kali:~/Desktop/Arafat/TerminalCommands/linux-content/Day6/PracticeProblems/whileloop$ ./whileloopfour.sh 
Amout of Money Left: 0
Number of Bets Made: 14218
Number of Times Wom: 7059


